{
    "title": "WavefunctionProperties",
    "description": "Parameters\n----------\nbasis : :class:`BasisSet`\n\n    A quantum chemistry basis description.\n\n\n    Parameters\n    ----------\n    schema_name : ConstrainedStrValue, Default: qcschema_basis\n    schema_version : int, Default: 1\n    name : str\n        A standard basis name if available (e.g., 'cc-pVDZ').\n    description : str, Optional\n        A brief description of the basis set.\n    center_data : :class:`BasisCenter`\n        A mapping of all types of centers available.\n    atom_map : List[str]\n        Mapping of all centers in the parent molecule to centers in `center_data`.\n    nbf : int, Optional\n        The number of basis functions.\n\nrestricted : bool\n    If the computation was restricted or not (alpha == beta). If True, all beta quantities are skipped.\nh_core_a : Array, Optional\n    Alpha-spin core (one-electron) Hamiltonian.\nh_core_b : Array, Optional\n    Beta-spin core (one-electron) Hamiltonian.\nh_effective_a : Array, Optional\n    Alpha-spin effective core (one-electron) Hamiltonian.\nh_effective_b : Array, Optional\n    Beta-spin effective core (one-electron) Hamiltonian \nscf_orbitals_a : Array, Optional\n    SCF alpha-spin orbitals.\nscf_orbitals_b : Array, Optional\n    SCF beta-spin orbitals.\nscf_density_a : Array, Optional\n    SCF alpha-spin density matrix.\nscf_density_b : Array, Optional\n    SCF beta-spin density matrix.\nscf_fock_a : Array, Optional\n    SCF alpha-spin Fock matrix.\nscf_fock_b : Array, Optional\n    SCF beta-spin Fock matrix.\nscf_eigenvalues_a : Array, Optional\n    SCF alpha-spin eigenvalues.\nscf_eigenvalues_b : Array, Optional\n    SCF beta-spin eigenvalues.\nscf_occupations_a : Array, Optional\n    SCF alpha-spin occupations.\nscf_occupations_b : Array, Optional\n    SCF beta-spin occupations.\norbitals_a : str, Optional\n    Index to the alpha-spin orbitals of the primary return.\norbitals_b : str, Optional\n    Index to the beta-spin orbitals of the primary return.\ndensity_a : str, Optional\n    Index to the alpha-spin density of the primary return.\ndensity_b : str, Optional\n    Index to the beta-spin density of the primary return.\nfock_a : str, Optional\n    Index to the alpha-spin Fock matrix of the primary return.\nfock_b : str, Optional\n    Index to the beta-spin Fock matrix of the primary return.\neigenvalues_a : str, Optional\n    Index to the alpha-spin eigenvalues of the primary return.\neigenvalues_b : str, Optional\n    Index to the beta-spin eigenvalues of the primary return.\noccupations_a : str, Optional\n    Index to the alpha-spin orbital eigenvalues of the primary return.\noccupations_b : str, Optional\n    Index to the beta-spin orbital eigenvalues of the primary return.",
    "type": "object",
    "properties": {
        "basis": {
            "title": "Basis",
            "description": "\nA quantum chemistry basis description.\n\n\nParameters\n----------\nschema_name : ConstrainedStrValue, Default: qcschema_basis\nschema_version : int, Default: 1\nname : str\n    A standard basis name if available (e.g., 'cc-pVDZ').\ndescription : str, Optional\n    A brief description of the basis set.\ncenter_data : :class:`BasisCenter`\n    A mapping of all types of centers available.\natom_map : List[str]\n    Mapping of all centers in the parent molecule to centers in `center_data`.\nnbf : int, Optional\n    The number of basis functions.\n",
            "allOf": [
                {
                    "$ref": "#/definitions/BasisSet"
                }
            ]
        },
        "restricted": {
            "title": "Restricted",
            "description": "If the computation was restricted or not (alpha == beta). If True, all beta quantities are skipped.",
            "type": "boolean"
        },
        "h_core_a": {
            "title": "H Core A",
            "description": "Alpha-spin core (one-electron) Hamiltonian.",
            "type": "array",
            "items": {
                "type": "number"
            }
        },
        "h_core_b": {
            "title": "H Core B",
            "description": "Beta-spin core (one-electron) Hamiltonian.",
            "type": "array",
            "items": {
                "type": "number"
            }
        },
        "h_effective_a": {
            "title": "H Effective A",
            "description": "Alpha-spin effective core (one-electron) Hamiltonian.",
            "type": "array",
            "items": {
                "type": "number"
            }
        },
        "h_effective_b": {
            "title": "H Effective B",
            "description": "Beta-spin effective core (one-electron) Hamiltonian ",
            "type": "array",
            "items": {
                "type": "number"
            }
        },
        "scf_orbitals_a": {
            "title": "Scf Orbitals A",
            "description": "SCF alpha-spin orbitals.",
            "type": "array",
            "items": {
                "type": "number"
            }
        },
        "scf_orbitals_b": {
            "title": "Scf Orbitals B",
            "description": "SCF beta-spin orbitals.",
            "type": "array",
            "items": {
                "type": "number"
            }
        },
        "scf_density_a": {
            "title": "Scf Density A",
            "description": "SCF alpha-spin density matrix.",
            "type": "array",
            "items": {
                "type": "number"
            }
        },
        "scf_density_b": {
            "title": "Scf Density B",
            "description": "SCF beta-spin density matrix.",
            "type": "array",
            "items": {
                "type": "number"
            }
        },
        "scf_fock_a": {
            "title": "Scf Fock A",
            "description": "SCF alpha-spin Fock matrix.",
            "type": "array",
            "items": {
                "type": "number"
            }
        },
        "scf_fock_b": {
            "title": "Scf Fock B",
            "description": "SCF beta-spin Fock matrix.",
            "type": "array",
            "items": {
                "type": "number"
            }
        },
        "scf_eigenvalues_a": {
            "title": "Scf Eigenvalues A",
            "description": "SCF alpha-spin eigenvalues.",
            "type": "array",
            "items": {
                "type": "number"
            }
        },
        "scf_eigenvalues_b": {
            "title": "Scf Eigenvalues B",
            "description": "SCF beta-spin eigenvalues.",
            "type": "array",
            "items": {
                "type": "number"
            }
        },
        "scf_occupations_a": {
            "title": "Scf Occupations A",
            "description": "SCF alpha-spin occupations.",
            "type": "array",
            "items": {
                "type": "number"
            }
        },
        "scf_occupations_b": {
            "title": "Scf Occupations B",
            "description": "SCF beta-spin occupations.",
            "type": "array",
            "items": {
                "type": "number"
            }
        },
        "orbitals_a": {
            "title": "Orbitals A",
            "description": "Index to the alpha-spin orbitals of the primary return.",
            "type": "string"
        },
        "orbitals_b": {
            "title": "Orbitals B",
            "description": "Index to the beta-spin orbitals of the primary return.",
            "type": "string"
        },
        "density_a": {
            "title": "Density A",
            "description": "Index to the alpha-spin density of the primary return.",
            "type": "string"
        },
        "density_b": {
            "title": "Density B",
            "description": "Index to the beta-spin density of the primary return.",
            "type": "string"
        },
        "fock_a": {
            "title": "Fock A",
            "description": "Index to the alpha-spin Fock matrix of the primary return.",
            "type": "string"
        },
        "fock_b": {
            "title": "Fock B",
            "description": "Index to the beta-spin Fock matrix of the primary return.",
            "type": "string"
        },
        "eigenvalues_a": {
            "title": "Eigenvalues A",
            "description": "Index to the alpha-spin eigenvalues of the primary return.",
            "type": "string"
        },
        "eigenvalues_b": {
            "title": "Eigenvalues B",
            "description": "Index to the beta-spin eigenvalues of the primary return.",
            "type": "string"
        },
        "occupations_a": {
            "title": "Occupations A",
            "description": "Index to the alpha-spin orbital eigenvalues of the primary return.",
            "type": "string"
        },
        "occupations_b": {
            "title": "Occupations B",
            "description": "Index to the beta-spin orbital eigenvalues of the primary return.",
            "type": "string"
        }
    },
    "required": [
        "basis",
        "restricted"
    ],
    "additionalProperties": false,
    "definitions": {
        "ElectronShell": {
            "title": "ElectronShell",
            "description": "Information for a single electronic shell\n\n\nParameters\n----------\nangular_momentum : List[int]\n    Angular momentum for this shell.\nharmonic_type : {spherical,cartesian}\n\n        The angular momentum representation of a shell.\n    \nexponents : List[float]\n    Exponents for this contracted shell.\ncoefficients : List[List[float]]\n    General contraction coefficients for this shell, individual list components will be the individual segment contraction coefficients.",
            "type": "object",
            "properties": {
                "angular_momentum": {
                    "title": "Angular Momentum",
                    "description": "Angular momentum for this shell.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "harmonic_type": {
                    "title": "Harmonic Type",
                    "description": "\n    The angular momentum representation of a shell.\n    ",
                    "enum": [
                        "spherical",
                        "cartesian"
                    ],
                    "type": "string"
                },
                "exponents": {
                    "title": "Exponents",
                    "description": "Exponents for this contracted shell.",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "coefficients": {
                    "title": "Coefficients",
                    "description": "General contraction coefficients for this shell, individual list components will be the individual segment contraction coefficients.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                }
            },
            "required": [
                "angular_momentum",
                "harmonic_type",
                "exponents",
                "coefficients"
            ],
            "additionalProperties": false
        },
        "ECPPotential": {
            "title": "ECPPotential",
            "description": "Information for a single ECP potential.\n\n\nParameters\n----------\necp_type : {scalar,spinorbit}\n\n        The type of the ECP potential.\n    \nangular_momentum : List[int]\n    Angular momentum for the ECPs.\nr_exponents : List[int]\n    Exponents of the 'r' term.\ngaussian_exponents : List[float]\n    Exponents of the 'gaussian' term.\ncoefficients : List[List[float]]\n    General contraction coefficients for this shell, individual list components will be the individual segment contraction coefficients.",
            "type": "object",
            "properties": {
                "ecp_type": {
                    "title": "Ecp Type",
                    "description": "\n    The type of the ECP potential.\n    ",
                    "enum": [
                        "scalar",
                        "spinorbit"
                    ],
                    "type": "string"
                },
                "angular_momentum": {
                    "title": "Angular Momentum",
                    "description": "Angular momentum for the ECPs.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "r_exponents": {
                    "title": "R Exponents",
                    "description": "Exponents of the 'r' term.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "gaussian_exponents": {
                    "title": "Gaussian Exponents",
                    "description": "Exponents of the 'gaussian' term.",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "coefficients": {
                    "title": "Coefficients",
                    "description": "General contraction coefficients for this shell, individual list components will be the individual segment contraction coefficients.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                }
            },
            "required": [
                "ecp_type",
                "angular_momentum",
                "r_exponents",
                "gaussian_exponents",
                "coefficients"
            ],
            "additionalProperties": false
        },
        "BasisCenter": {
            "title": "BasisCenter",
            "description": "Data for a single atom/center in a basis set.\n\n\nParameters\n----------\nelectron_shells : :class:`ElectronShell`\n    Electronic shells for this center.\necp_electrons : int, Default: 0\n    Number of electrons replace by ECP potentials.\necp_potentials : :class:`ECPPotential`, Optional\n    ECPs for this center.",
            "type": "object",
            "properties": {
                "electron_shells": {
                    "title": "Electron Shells",
                    "description": "Electronic shells for this center.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ElectronShell"
                    }
                },
                "ecp_electrons": {
                    "title": "Ecp Electrons",
                    "description": "Number of electrons replace by ECP potentials.",
                    "default": 0,
                    "type": "integer"
                },
                "ecp_potentials": {
                    "title": "Ecp Potentials",
                    "description": "ECPs for this center.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ECPPotential"
                    }
                }
            },
            "required": [
                "electron_shells"
            ],
            "additionalProperties": false
        },
        "BasisSet": {
            "title": "BasisSet",
            "description": "A quantum chemistry basis description.\n\n\nParameters\n----------\nschema_name : ConstrainedStrValue, Default: qcschema_basis\nschema_version : int, Default: 1\nname : str\n    A standard basis name if available (e.g., 'cc-pVDZ').\ndescription : str, Optional\n    A brief description of the basis set.\ncenter_data : :class:`BasisCenter`\n    A mapping of all types of centers available.\natom_map : List[str]\n    Mapping of all centers in the parent molecule to centers in `center_data`.\nnbf : int, Optional\n    The number of basis functions.",
            "type": "object",
            "properties": {
                "schema_name": {
                    "title": "Schema Name",
                    "default": "qcschema_basis",
                    "type": "string",
                    "pattern": "qcschema_basis"
                },
                "schema_version": {
                    "title": "Schema Version",
                    "default": 1,
                    "type": "integer"
                },
                "name": {
                    "title": "Name",
                    "description": "A standard basis name if available (e.g., 'cc-pVDZ').",
                    "type": "string"
                },
                "description": {
                    "title": "Description",
                    "description": "A brief description of the basis set.",
                    "type": "string"
                },
                "center_data": {
                    "title": "Center Data",
                    "description": "A mapping of all types of centers available.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/BasisCenter"
                    }
                },
                "atom_map": {
                    "title": "Atom Map",
                    "description": "Mapping of all centers in the parent molecule to centers in `center_data`.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nbf": {
                    "title": "Nbf",
                    "description": "The number of basis functions.",
                    "type": "integer"
                }
            },
            "required": [
                "name",
                "center_data",
                "atom_map"
            ],
            "additionalProperties": false
        }
    }
}